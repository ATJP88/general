#!/bin/bash

set -e

# Function for maven build and Docker run
maven_build_and_docker_run() {
    API_NAME=$1
    IMAGE_TAG=$2
    PORT=$3
    RUN_DEV_CONTAINERS=$4
    ENV_VARS=$5

    echo "Mvn Build started for $API_NAME"

    pwd

    # Ensure the script is running from the correct base directory
    BASE_DIR="/c/Users/45239669/Documents/FDS/fds26_06/federated-content-search/root"
    
    if [ ! -d "$BASE_DIR" ]; then
        echo "Base directory $BASE_DIR does not exist. Exiting."
        exit 1
    fi
    
    cd "$BASE_DIR"
    pwd

    export JAVA_HOME=/opt/java/zulu21.34.19-ca-jdk21.0.3-linux_x64
    export M2_HOME=/opt/maven/apache-maven-3.9.3

    echo $JAVA_HOME
    echo $PATH
    echo $M2_HOME

    ls -lrta

    if [ ! -d "$API_NAME" ]; then
        echo "API directory $API_NAME does not exist. Exiting."
        exit 1
    fi

    cd "$API_NAME"
    ls -lrta

    mvn -version
    mvn clean compile -Dimage.tag=$IMAGE_TAG
    mvn clean package -Dimage.tag=$IMAGE_TAG
    mvn clean package jib:dockerBuild -Dimage.tag=$IMAGE_TAG

    echo "Running Docker container for $API_NAME"

    # Run Docker container
    if [ "$RUN_DEV_CONTAINERS" = true ]; then
        for i in 1 2 3; do
            docker run -itd --name "filenetapi-${i}" -p 800${i}:800${i} --network fds -e spring_profile="dev${i}" -e CMIS_userid="Thiru" -e CMIS_password="Thiru" "${IMAGE_TAG}"
        done
    else
        if [ -n "$ENV_VARS" ]; then
            docker run -itd --name "${API_NAME}" -p ${PORT}:${PORT} --network fds ${ENV_VARS} "${IMAGE_TAG}"
        else
            docker run -itd --name "${API_NAME}" -p ${PORT}:${PORT} --network fds "${IMAGE_TAG}"
        fi
    fi

    echo "Docker container for $API_NAME is up and running."
}

# Stage: maven build and Docker run for aggregate-api
stage_maven_build_and_docker_run_aggregate_api() {
    maven_build_and_docker_run "aggregate-api" "aggregate-api:v1.1" 7000 false ""
}

# Stage: maven build and Docker run for filenet-api
stage_maven_build_and_docker_run_filenet_api() {
    maven_build_and_docker_run "filenet-api" "filenet-api:v1.1" 0 true ""
}

# Stage: maven build and Docker run for arc-api
stage_maven_build_and_docker_run_arc_api() {
    maven_build_and_docker_run "arc" "arc-api:v1.1" 8101 false "-e spring_profile=dev -e CMIS_userid=Thiru -e CMIS_password=Thiru"
}

# Execute stages
stage_maven_build_and_docker_run_aggregate_api
stage_maven_build_and_docker_run_filenet_api
stage_maven_build_and_docker_run_arc_api

echo "All stages completed successfully."
