#!/bin/bash

set -e

# Define variables
CONTAINER_REGISTRY='asia-docker.pkg.dev/hsbc-12514600-fdscshk-dev/fdscs'
NEXUS_REPO='nexus3.systems.uk.hsbc:18080/hsbc-12514600-fdscshk-dev/test'
BUILD_NUMBER=${BUILD_NUMBER:-latest}  # Use provided BUILD_NUMBER or default to 'latest'

# Authenticate Docker to Nexus and GCP Artifact Registry
echo "$NEXUS_USERNAME" | docker login $NEXUS_REPO --username $NEXUS_USERNAME --password-stdin
gcloud auth configure-docker $CONTAINER_REGISTRY

# Read the deploy_images.txt file
if [ ! -f /tmp/deploy_images.txt ]; then
    echo "No images to deploy. Exiting."
    exit 0
fi

while read -r line; do
    API_NAME=$(echo $line | awk '{print $1}')
    IMAGE_TAG=$(echo $line | awk '{print $2}')

    NEXUS_IMAGE="$NEXUS_REPO/$API_NAME:$IMAGE_TAG"
    GCP_IMAGE="$CONTAINER_REGISTRY/$API_NAME:$IMAGE_TAG"

    echo "Pulling image $NEXUS_IMAGE from Nexus"
    docker pull $NEXUS_IMAGE

    echo "Tagging image as $GCP_IMAGE"
    docker tag $NEXUS_IMAGE $GCP_IMAGE

    echo "Pushing image to GCP Artifact Registry"
    docker push $GCP_IMAGE

    echo "Removing local image $NEXUS_IMAGE"
    docker rmi $NEXUS_IMAGE
done < /tmp/deploy_images.txt

echo "All Docker operations completed successfully."


#!/bin/bash

set -e

# Define variables
NEXUS_REPO='nexus3.systems.uk.hsbc:18080/hsbc-12514600-fdscshk-dev/test'
CONTAINER_REGISTRY='asia-docker.pkg.dev/hsbc-12514600-fdscshk-dev/fdscs'
BUILD_NUMBER=${BUILD_NUMBER:-latest}  # Use provided BUILD_NUMBER or default to 'latest'
IMAGE_NAME="ui"
NEXUS_IMAGE="$NEXUS_REPO/$IMAGE_NAME:v1.$BUILD_NUMBER"
GCP_IMAGE="$CONTAINER_REGISTRY/$IMAGE_NAME:v1.$BUILD_NUMBER"

# Ensure Kubernetes context is set correctly
gcloud config set project your-gcp-project-id
gcloud container clusters get-credentials your-cluster-name --zone your-cluster-zone

# Authenticate Docker to Nexus and GCP Artifact Registry
echo "$NEXUS_USERNAME" | docker login $NEXUS_REPO --username $NEXUS_USERNAME --password-stdin
gcloud auth configure-docker $CONTAINER_REGISTRY

# Build the Docker image
echo "Building Docker image for $IMAGE_NAME"
docker build -t $NEXUS_IMAGE .

# Push the Docker image to Nexus
echo "Pushing image $NEXUS_IMAGE to Nexus"
docker push $NEXUS_IMAGE

# Tag and push the image to GCP Artifact Registry
echo "Tagging image as $GCP_IMAGE"
docker tag $NEXUS_IMAGE $GCP_IMAGE

echo "Pushing image to GCP Artifact Registry"
docker push $GCP_IMAGE

# Remove the local Nexus image to save space
echo "Removing local image $NEXUS_IMAGE"
docker rmi $NEXUS_IMAGE

# Update the Kubernetes deployment
echo "Updating Kubernetes deployment for $IMAGE_NAME to use image $GCP_IMAGE"
kubectl set image deployment/deployment-ui ui=$GCP_IMAGE -n fdscs-dev
echo "deployment.apps/deployment-ui image updated"

echo "All operations completed successfully."

#!/bin/bash

set -e

# Define variables
BASEDIR="/path/to/your/base/dir"
NEXUS_REPO='nexus3.systems.uk.hsbc:18080/hsbc-12514600-fdscshk-dev/test'
CONTAINER_REGISTRY='asia-docker.pkg.dev/hsbc-12514600-fdscshk-dev/fdscs'
BUILD_NUMBER=${BUILD_NUMBER:-latest}  # Use provided BUILD_NUMBER or default to 'latest'

# Authenticate Docker to Nexus and GCP Artifact Registry
echo "$NEXUS_USERNAME" | docker login $NEXUS_REPO --username $NEXUS_USERNAME --password-stdin
gcloud auth configure-docker $CONTAINER_REGISTRY

# Function to build and push Docker images
build_and_push_image() {
    API_NAME=$1
    DOCKERFILE_PATH="$BASEDIR/$API_NAME/Dockerfile"

    # Build Docker image
    echo "Building Docker image for $API_NAME from $DOCKERFILE_PATH"
    docker build -t "$API_NAME:$BUILD_NUMBER" -f "$DOCKERFILE_PATH" "$BASEDIR/$API_NAME"

    # Tag and push image to Nexus
    NEXUS_IMAGE="$NEXUS_REPO/$API_NAME:$BUILD_NUMBER"
    echo "Tagging and pushing image to Nexus: $NEXUS_IMAGE"
    docker tag "$API_NAME:$BUILD_NUMBER" "$NEXUS_IMAGE"
    docker push "$NEXUS_IMAGE"

    # Tag and push image to GCP Artifact Registry
    GCP_IMAGE="$CONTAINER_REGISTRY/$API_NAME:$BUILD_NUMBER"
    echo "Tagging and pushing image to GCP Artifact Registry: $GCP_IMAGE"
    docker tag "$API_NAME:$BUILD_NUMBER" "$GCP_IMAGE"
    docker push "$GCP_IMAGE"

    # Remove local image
    echo "Removing local image $NEXUS_IMAGE"
    docker rmi "$NEXUS_IMAGE"
    docker rmi "$GCP_IMAGE"
}

# Read the deploy_images.txt file
if [ ! -f /tmp/deploy_images.txt ]; then
    echo "No images to deploy. Exiting."
    exit 0
fi

# Loop through each line in the deploy_images.txt
while read -r line; do
    API_NAME=$(echo $line | awk '{print $1}')
    build_and_push_image $API_NAME
done < /tmp/deploy_images.txt

echo "All images built and pushed successfully."


# Read the deploy_images.txt file
if [ ! -f /tmp/deploy_images.txt ]; then
    echo "No images to deploy. Exiting."
    exit 0
fi

echo "Reading deploy_images.txt file"

# Loop through each line in the deploy_images.txt
while read -r line; do
    echo "Processing line: $line"
    API_NAME=$(echo $line | awk '{print $1}')
    echo "API_NAME: $API_NAME"
    build_and_push_image $API_NAME
done < /tmp/deploy_images.txt

echo "All images built and pushed successfully."



#!/bin/bash

set -e

# Define variables
BASEDIR="/path/to/your/base/dir"  # Update this path accordingly
NEXUS_REPO='nexus3.systems.uk.hsbc:18080/hsbc-12514600-fdscshk-dev/test'
CONTAINER_REGISTRY='asia-docker.pkg.dev/hsbc-12514600-fdscshk-dev/fdscs'
BUILD_NUMBER=${BUILD_NUMBER:-latest}  # Use provided BUILD_NUMBER or default to 'latest'
TARGET_API="seekerui"

# Authenticate Docker to Nexus and GCP Artifact Registry
echo "Authenticating Docker to Nexus and GCP Artifact Registry"
echo "$NEXUS_USERNAME" | docker login $NEXUS_REPO --username $NEXUS_USERNAME --password-stdin
gcloud auth configure-docker $CONTAINER_REGISTRY

# Function to build and push Docker images
build_and_push_image() {
    API_NAME=$1
    DOCKERFILE_PATH="$BASEDIR/$API_NAME/Dockerfile"

    # Build Docker image
    echo "Building Docker image for $API_NAME from $DOCKERFILE_PATH"
    docker build -t "$API_NAME:$BUILD_NUMBER" -f "$DOCKERFILE_PATH" "$BASEDIR/$API_NAME"

    # Tag and push image to Nexus
    NEXUS_IMAGE="$NEXUS_REPO/$API_NAME:$BUILD_NUMBER"
    echo "Tagging and pushing image to Nexus: $NEXUS_IMAGE"
    docker tag "$API_NAME:$BUILD_NUMBER" "$NEXUS_IMAGE"
    docker push "$NEXUS_IMAGE"

    # Tag and push image to GCP Artifact Registry
    GCP_IMAGE="$CONTAINER_REGISTRY/$API_NAME:$BUILD_NUMBER"
    echo "Tagging and pushing image to GCP Artifact Registry: $GCP_IMAGE"
    docker tag "$API_NAME:$BUILD_NUMBER" "$GCP_IMAGE"
    docker push "$GCP_IMAGE"

    # Remove local image
    echo "Removing local image $NEXUS_IMAGE"
    docker rmi "$NEXUS_IMAGE"
    docker rmi "$GCP_IMAGE"
}

# Read the deploy_images.txt file
if [ ! -f /tmp/deploy_images.txt ]; then
    echo "No images to deploy. Exiting."
    exit 0
fi

echo "Reading deploy_images.txt file"

# Loop through each line in the deploy_images.txt
while read -r line; do
    echo "Processing line: $line"
    API_NAME=$(echo $line | awk '{print $1}')
    echo "API_NAME: $API_NAME"

    if [ "$API_NAME" == "$TARGET_API" ]; then
        build_and_push_image $API_NAME
    else
        echo "Skipping API_NAME: $API_NAME"
    fi
done < /tmp/deploy_images.txt

echo "All images built and pushed successfully."
